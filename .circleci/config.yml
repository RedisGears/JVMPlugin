version: 2.1

commands: 
  setup-executor:
    steps:
      - run:
          name: Setup executor
          command: |
            apt-get -qq update
            apt-get -q install -y git openssh-client curl ca-certificates make tar gzip
            bash <(curl -fsSL https://get.docker.com)
      - setup_remote_docker:
          docker_layer_caching: true

  setup-automation:
    steps:
      - run:
          name: Setup automation
          command: |
            git submodule update --init --recursive
            ./deps/readies/bin/getpy3

  build-and-test-steps:
    steps:
      - checkout
      - run:
          name: Checkout submodules
          command: git submodule update --init --recursive
      - setup-automation
      - run:
          name: Install Redis
          command: ./deps/readies/bin/getredis --version 6
      - run:
          name: Tests
          command: make tests
      - run:
          name: Pack
          command: make pack
      - persist_to_workspace:
          root: artifacts
          paths:
            - 'snapshot/*.tgz'

jobs:
  build-and-test-bionic:
      docker:
        - image: redisfab/rmbuilder:6.0.9-x64-bionic
      steps:
        - build-and-test-steps

  build-and-test-centos:
      docker:
        - image: redisfab/rmbuilder:6.0.9-x64-centos7
      steps:
        - build-and-test-steps

  build-docker:
      docker:
        - image: ubuntu:bionic
      steps:
        - setup-executor
        - checkout
        - run:
            name: Checkout submodules
            command: |
              git submodule update --init --recursive
        - run:
            name: Build docker and push to Dockerhub
            command: |
              docker login -u redisfab -p $DOCKER_REDISFAB_PWD
              docker build -t redisfab/redisgearsjvm:edge .
              docker push redisfab/redisgearsjvm:edge

  deploy_snapshots:
      docker:
        - image: redisfab/rmbuilder:6.0.9-x64-buster
      steps:
        - attach_workspace:
            at: artifacts
        - run:
            name: Deploy Snapshots to S3
            command: |
              for f in artifacts/snapshot/*.tgz; do
                aws s3 cp $f s3://redismodules/redisgears_plugins/jvm_plugin/snapshots/ --acl public-read
              done


on-any-branch: &on-any-branch
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

on-master: &on-master
  filters:
    branches:
      only: master

after-build-and-test: &after-build-and-test
  requires:
    - build-and-test-bionic
    - build-and-test-centos

workflows:
  version: 2
  commit:
    jobs:
      - build-and-test-bionic:
          <<: *on-any-branch
      - build-and-test-centos:
          <<: *on-any-branch
      - build-docker:
          <<: *on-master
      - deploy_snapshots:
          <<: *after-build-and-test
          <<: *on-master

  nightly:
      triggers:
        - schedule:
            cron: "0 0 * * *"
            filters:
              branches:
                only:
                  - master
      jobs:
        - build-and-test-bionic
        - build-and-test-centos
